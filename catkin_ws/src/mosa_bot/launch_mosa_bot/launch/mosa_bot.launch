<launch>
	<!-- Arduino encoder ticks -->
	<!-- <node pkg="rosserial_python" type="serial_node.py" name="serial_node"> -->
		<!-- <param name="port" value="/dev/ttyACM0" /> -->
	<!-- </node> -->
	<!-- LiDAR -->
	<include file="$(find rplidar_ros)/launch/rplidar_a2m12.launch" />
	<!-- IMU -->
	<include file="$(find mpu_6050_driver)/mpu_6050.launch" />
	<!-- Localization data publisher -->
	<include file="$(find localization_data_pub)/localization_data_pub.launch" />
	<!-- Coordinate frames testing -->
	<node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0 map odom 30" />
	<node pkg="tf" type="static_transform_publisher" name="base_link_broadcaster" args="0 0 0.09 0 0 0 base_footprint base_link 30" />
	<node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="0.06 0 0.08 0 0 0 base_link laser 30" />
	<node pkg="tf" type="static_transform_publisher" name="imu_broadcaster" args="0 0.06 0.02 0 0 0 base_link imu 30" />

     <!-- Node for imu_node.py -->
    <node name="imu_node" pkg="mpu_6050_driver" type="imu_node.py" output="screen">
        <!-- Add any required ROS parameters here -->
    </node>

    <!-- Node for tf_broadcaster_imu.py -->
    <node name="tf_broadcaster_imu" pkg="mpu_6050_driver" type="tf_broadcaster_imu.py" output="screen">
        <!-- Add any required ROS parameters here -->
    </node> 

    <!-- Lidar Data Publisher Using RPLIDAR from Slamtec -->

    <!-- Publish: /scan -->
  <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
    <param name="serial_port"         type="string" value="/dev/ttyUSB0"/>
    <param name="serial_baudrate"     type="int"    value="256000"/>
    <!--param name="serial_baudrate"  type="int"    value="115200"-->
    <param name="frame_id"            type="string" value="laser"/>
    <param name="inverted"            type="bool"   value="false"/>
    <param name="angle_compensate"    type="bool"   value="true"/>
  </node>

</launch>
